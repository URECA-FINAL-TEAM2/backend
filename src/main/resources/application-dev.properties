# Dev Profile Configuration
spring.config.activate.on-profile=dev
spring.datasource.url=jdbc:mysql://${RDS_ENDPOINT}:3306/${DB_NAME}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
file.dir=beautymeongdang

# AWS Configuration
cloud.aws.s3.bucket=${S3_BUCKET_NAME}
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID}
cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}
cloud.aws.region.static=${AWS_REGION}
cloud.aws.stack.auto=false
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=30MB
spring.servlet.multipart.max-request-size=30MB

#websocket
spring.messaging.stomp.max-buffer-size=20971520

server.jetty.websocket.idle-timeout=60s
spring.messaging.stomp.message-size-limit=20971520 # 20MB
spring.messaging.task.inbound.pool.size=10
spring.messaging.task.outbound.pool.size=10
allowed.origins=http://localhost:5173
spring.security.headers.content-security-policy=default-src 'self'; connect-src 'self' http://localhost:5173
logging.level.org.springframework.messaging=DEBUG
logging.level.org.springframework.web.socket=DEBUG
logging.level.org.springframework.web.socket.sockjs=DEBUG

# Email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# Redis
spring.data.redis.host=${SPRING_REDIS_HOST}
spring.data.redis.port=${SPRING_REDIS_PORT}

# Toss
toss.payments.client.key=${TOSS_PAYMENTS_CLIENT_KEY}
toss.payments.secret.key=${TOSS_PAYMENTS_SECRET_KEY}

# JWT
spring.jwt.secret=${JWT_SECRET}

# Kakao
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}

spring.security.oauth2.client.registration.kakao.redirect-uri=https://beautymeongdang.vercel.app/login/oauth2/code/kakao
#spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:5173/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email,profile_image
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

# Kakao provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Google
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

spring.security.oauth2.client.registration.google.redirect-uri=https://beautymeongdang.vercel.app/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:5173/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

server.error.whitelabel.enabled=false

# CloudWatch Logs
logging.group.name=my-application-logs
logging.stream.name=${logging.group.name}-${spring.application.name}
logging.region=${AWS_REGION}
logging.accessKeyId=${AWS_ACCESS_KEY_ID}
logging.secretKey=${AWS_SECRET_ACCESS_KEY}

# TimeZone
spring.jackson.time-zone=Asia/Seoul
logging.level.root=DEBUG

# chatGPT
openai.secret-key=${CHATGPT_SECRET_KEY}

openai.url.model=https://api.openai.com/v1/models
openai.url.model-list=https://api.openai.com/v1/models
openai.url.legacy-prompt=https://api.openai.com/v1/completions
openai.url.prompt=https://api.openai.com/v1/chat/completions

openai.prompt.system=You are a professional pet groomer with 15 years of experience. Provide detailed and practical advice about pet grooming based on the following categories:\n\n. Breed-Specific Grooming Information\n- Coat type considerations\n- Breed-specific challenges\n- Recommended techniques
